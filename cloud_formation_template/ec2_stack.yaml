Resources:
  AppNode:
    Type: AWS::EC2::Instance
    Properties:
      Tags: 
        - Key: "Name"
          Value: "docker-server-cf"
      InstanceType: t2.micro
      ImageId: ami-0fb391cce7a602d1f
      KeyName: aws-key1
      SecurityGroups:
        - !Ref AppNodeSG
      UserData: !Base64 |
        #!/bin/bash
        sudo apt-get -y update
        sudo apt-get -y install ca-certificates curl gnupg lsb-release
        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg  --dearmor -o /etc/apt/keyrings/docker.gpg      
        echo \
           "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
           $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get -y update
        sudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-compose-plugin
        #Post installation steps
        sudo groupadd docker
        sudo usermod -aG docker $USER
        #Docker run outside of EC2 Instance
        mkdir -p /etc/systemd/system/docker.service.d
        sudo chmod -R 777 /etc/systemd/system/docker.service.d
        printf "[Service]\nExecStart=\nExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2375\n" >>  /etc/systemd/system/docker.service.d/docker.conf
        #PRestart Docker
        sudo systemctl daemon-reload
        sudo systemctl restart docker
  AppNodeSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags: 
        - Key: "Name"
          Value: "docker-sg-cf"
      GroupDescription: Security Group for the app nodes that allow ssh, http and docker ports
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 77.96.152.181/32
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 77.96.152.181/32
      - IpProtocol: tcp
        FromPort: '2375'
        ToPort: '2375'
        CidrIp: 0.0.0.0/0